generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ServerOwner {
  id            Int     @default(autoincrement())
  serverOwnerId String  @id @unique
  name          String
  email         String  @unique
  password      String
  serverId      Server?
}

model Server {
  id            Int         @default(autoincrement())
  serverId      String      @id @unique
  name          String      @unique
  serverOwner   ServerOwner @relation(fields: [serverOwnerId], references: [serverOwnerId])
  serverOwnerId String      @unique
  product       Product[]
  user          User?       @relation(fields: [userId], references: [userId])
  userId        String?
}

model Product {
  id        Int       @default(autoincrement())
  productId String    @id @unique
  name      String    @unique
  price     Float
  server    Server    @relation(fields: [serverId], references: [serverId])
  serverId  String
  user      User?     @relation(fields: [userId], references: [userId])
  userId    String?
  payment   Payment[]
}

model User {
  id           Int           @default(autoincrement())
  userId       String        @id @unique
  name         String
  email        String        @unique
  password     String
  product      Product[]
  server       Server[]
  payment      Payment[]
  RefreshToken RefreshToken?
}

model Payment {
  id        Int     @default(autoincrement())
  paymentId String  @id @unique
  amount    Int
  user      User    @relation(fields: [userId], references: [userId])
  userId    String
  product   Product @relation(fields: [productId], references: [productId])
  productId String
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      User   @relation(fields: [userId], references: [userId])
  userId    String @unique
}

// model Category {
//   id       Int       @id @default(autoincrement())
//   name     String    @unique
//   categoty String
//   Product  Product[]
//   Server   Server[]
// }
